from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.book import Book
from openapi_server import util

from openapi_server.models.book import Book  # noqa: E501

class ControllersBooksControllerGetBooks200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, success=None, data=None, count=None):  # noqa: E501
        """ControllersBooksControllerGetBooks200Response - a model defined in OpenAPI

        :param success: The success of this ControllersBooksControllerGetBooks200Response.  # noqa: E501
        :type success: bool
        :param data: The data of this ControllersBooksControllerGetBooks200Response.  # noqa: E501
        :type data: List[Book]
        :param count: The count of this ControllersBooksControllerGetBooks200Response.  # noqa: E501
        :type count: int
        """
        self.openapi_types = {
            'success': bool,
            'data': List[Book],
            'count': int
        }

        self.attribute_map = {
            'success': 'success',
            'data': 'data',
            'count': 'count'
        }

        self._success = success
        self._data = data
        self._count = count

    @classmethod
    def from_dict(cls, dikt) -> 'ControllersBooksControllerGetBooks200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The controllers_books_controller_get_books_200_response of this ControllersBooksControllerGetBooks200Response.  # noqa: E501
        :rtype: ControllersBooksControllerGetBooks200Response
        """
        return util.deserialize_model(dikt, cls)

    @property
    def success(self) -> bool:
        """Gets the success of this ControllersBooksControllerGetBooks200Response.


        :return: The success of this ControllersBooksControllerGetBooks200Response.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success: bool):
        """Sets the success of this ControllersBooksControllerGetBooks200Response.


        :param success: The success of this ControllersBooksControllerGetBooks200Response.
        :type success: bool
        """

        self._success = success

    @property
    def data(self) -> List[Book]:
        """Gets the data of this ControllersBooksControllerGetBooks200Response.


        :return: The data of this ControllersBooksControllerGetBooks200Response.
        :rtype: List[Book]
        """
        return self._data

    @data.setter
    def data(self, data: List[Book]):
        """Sets the data of this ControllersBooksControllerGetBooks200Response.


        :param data: The data of this ControllersBooksControllerGetBooks200Response.
        :type data: List[Book]
        """

        self._data = data

    @property
    def count(self) -> int:
        """Gets the count of this ControllersBooksControllerGetBooks200Response.


        :return: The count of this ControllersBooksControllerGetBooks200Response.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """Sets the count of this ControllersBooksControllerGetBooks200Response.


        :param count: The count of this ControllersBooksControllerGetBooks200Response.
        :type count: int
        """

        self._count = count
